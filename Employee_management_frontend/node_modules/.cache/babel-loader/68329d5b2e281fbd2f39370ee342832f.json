{"ast":null,"code":"// import React, {useState, useEffect} from 'react'\n// import { Link } from 'react-router-dom'\n// import EmployeeSevice from '../Service/EmployeeSevice'\n// import Swal from 'sweetalert2';\n// import Pagination from \"@material-ui/lab/Pagination\";\n// const EmployeeList = () => {\n//     const [employees, setEmployees] = useState([])\n//     const [page, setPage] = useState(1);\n//     const [count, setCount] = useState(0);\n//     const [size, setSize] = useState(3);\n//     const pageSizes = [3,4,5];\n//     // useEffect(() => {\n//     //     getAllEmployees();\n//     // },[])\n//     useEffect(() => \n//         retrieveEmployees()\n//     ,[page, size]);\n//     const getRequestParams = (page, size) => {\n//         let params = {};\n//         if (page) {\n//           params[\"page\"] = page - 1;\n//         }\n//         if (size) {\n//           params[\"size\"] = size;\n//         }\n//         return params;\n//       }; \n//     const retrieveEmployees = () => {\n//     const params = getRequestParams(page, size);\n//     EmployeeSevice.getAllEmployeeByPages(params.page,params.size)\n//         .then((response) => {\n//         const { employees, totalPages } = response.data;\n//         setEmployees(employees);\n//         setCount(totalPages);\n//         console.log(response.data);\n//         })\n//         .catch((e) => {\n//         console.log(e);\n//         });\n//     };\n//     const handlePageChange = (event, value) => {\n//         setPage(value);\n//     };\n//     const handlePageSizeChange = (event) => {\n//         setSize(event.target.value);\n//         setPage(1);\n//     };\n//     const getAllEmployees = () => {\n//         EmployeeSevice.getAllEmployees().then((response) => {\n//             setEmployees(response.data)\n//             console.log(response.data);\n//         }).catch(error =>{\n//             console.log(error);\n//         })\n//     }\n//     const deleteEmployee = (Id) => {\n//         Swal.fire({\n//             icon: 'warning',\n//             title: 'Are you sure?',\n//             text: \"You won't be able to revert this!\",\n//             showCancelButton: true,\n//             confirmButtonText: 'Yes, delete it!',\n//             cancelButtonText: 'No, cancel!',\n//         }).\n//         then((response) => {\n//             if(response.value){\n//                 EmployeeSevice.deleteEmployee(Id); \n//                 Swal.fire({\n//                     icon: 'success',\n//                     title: 'Deleted!',\n//                     text: `${employees.name}'s data has been deleted.`,\n//                     showConfirmButton: false,\n//                     timer: 3000,\n//                 });\n//                 getAllEmployees();\n//             }   \n//         }).catch((error) => {\n//             console.log(error)\n//         })\n//     }\n//     return (\n//         <div className = \"container\">\n//             <h2 className = \"text-center\"> List Employees </h2>\n//             <Link to=\"/add-employee\" className = \"btn btn-primary mb-2\" > Add Employee </Link> &nbsp; &nbsp;\n//             <Link to=\"/show-department\" className = \"btn btn-primary mb-2\" > Department </Link>\n//             <table className=\"table table-bordered table-striped\">\n//                 <thead>\n//                     <th> Name </th>\n//                     <th> Age </th>\n//                     <th> Email </th>\n//                     <th> Joining date </th>\n//                     <th> Salary </th>\n//                     <th> Department Name </th>\n//                     <th> Actions </th>\n//                 </thead>\n//                 <tbody>\n//                     {\n//                         employees.map (\n//                             employee =>\n//                             <tr key={employee.id}> \n//                                 <td> {employee.name} </td>\n//                                 <td>{employee.age}</td>\n//                                 <td>{employee.email}</td>\n//                                 <td>{employee.JoiningDate}</td>\n//                                 <td>{employee.salary}</td>\n//                                 <td>{employee.department.deptName}</td>\n//                                 <td>\n//                                     <Link className=\"btn btn-info\" to={`/edit-employee/${employee.id}`} >Update</Link>\n//                                     <button className = \"btn btn-danger\" onClick = {() => deleteEmployee(employee.id)}\n//                                     style = {{marginLeft:\"10px\"}}> Delete</button>\n//                                 </td>\n//                             </tr>\n//                         )\n//                     }\n//                 </tbody>\n//             </table>\n//             <div className=\"mt-3\">\n//           {\"Items per Page: \"}\n//           <select onChange={handlePageSizeChange} value={size}>\n//             {pageSizes.map((size) => (\n//               <option key={size} value={size}>\n//                 {size}\n//               </option>\n//             ))}\n//           </select>\n//           <Pagination\n//             className=\"my-3\"\n//             count={count}\n//             page={page}\n//             siblingCount={1}\n//             boundaryCount={1}\n//             variant=\"outlined\"\n//             shape=\"rounded\"\n//             onChange={handlePageChange}\n//           />\n//         </div>\n//         </div>\n//     )\n// }\n// export default EmployeeList","map":{"version":3,"names":[],"sources":["C:/Users/HP/Desktop/react app/emp_management/src/Component/EmployeeList.js"],"sourcesContent":["// import React, {useState, useEffect} from 'react'\r\n// import { Link } from 'react-router-dom'\r\n// import EmployeeSevice from '../Service/EmployeeSevice'\r\n// import Swal from 'sweetalert2';\r\n// import Pagination from \"@material-ui/lab/Pagination\";\r\n\r\n// const EmployeeList = () => {\r\n\r\n//     const [employees, setEmployees] = useState([])\r\n//     const [page, setPage] = useState(1);\r\n//     const [count, setCount] = useState(0);\r\n//     const [size, setSize] = useState(3);\r\n//     const pageSizes = [3,4,5];\r\n\r\n//     // useEffect(() => {\r\n//     //     getAllEmployees();\r\n//     // },[])\r\n\r\n//     useEffect(() => \r\n//         retrieveEmployees()\r\n//     ,[page, size]);\r\n\r\n//     const getRequestParams = (page, size) => {\r\n//         let params = {};\r\n//         if (page) {\r\n//           params[\"page\"] = page - 1;\r\n//         }\r\n//         if (size) {\r\n//           params[\"size\"] = size;\r\n//         }\r\n//         return params;\r\n//       }; \r\n    \r\n//     const retrieveEmployees = () => {\r\n//     const params = getRequestParams(page, size);\r\n//     EmployeeSevice.getAllEmployeeByPages(params.page,params.size)\r\n//         .then((response) => {\r\n//         const { employees, totalPages } = response.data;\r\n//         setEmployees(employees);\r\n//         setCount(totalPages);\r\n//         console.log(response.data);\r\n//         })\r\n//         .catch((e) => {\r\n//         console.log(e);\r\n//         });\r\n//     };\r\n\r\n//     const handlePageChange = (event, value) => {\r\n//         setPage(value);\r\n//     };\r\n//     const handlePageSizeChange = (event) => {\r\n//         setSize(event.target.value);\r\n//         setPage(1);\r\n\r\n//     };\r\n\r\n//     const getAllEmployees = () => {\r\n//         EmployeeSevice.getAllEmployees().then((response) => {\r\n//             setEmployees(response.data)\r\n//             console.log(response.data);\r\n//         }).catch(error =>{\r\n//             console.log(error);\r\n//         })\r\n//     }\r\n//     const deleteEmployee = (Id) => {\r\n//         Swal.fire({\r\n//             icon: 'warning',\r\n//             title: 'Are you sure?',\r\n//             text: \"You won't be able to revert this!\",\r\n//             showCancelButton: true,\r\n//             confirmButtonText: 'Yes, delete it!',\r\n//             cancelButtonText: 'No, cancel!',\r\n//         }).\r\n//         then((response) => {\r\n//             if(response.value){\r\n//                 EmployeeSevice.deleteEmployee(Id); \r\n//                 Swal.fire({\r\n//                     icon: 'success',\r\n//                     title: 'Deleted!',\r\n//                     text: `${employees.name}'s data has been deleted.`,\r\n//                     showConfirmButton: false,\r\n//                     timer: 3000,\r\n//                 });\r\n//                 getAllEmployees();\r\n               \r\n//             }   \r\n//         }).catch((error) => {\r\n//             console.log(error)\r\n//         })\r\n//     }\r\n\r\n//     return (\r\n//         <div className = \"container\">\r\n//             <h2 className = \"text-center\"> List Employees </h2>\r\n//             <Link to=\"/add-employee\" className = \"btn btn-primary mb-2\" > Add Employee </Link> &nbsp; &nbsp;\r\n            \r\n//             <Link to=\"/show-department\" className = \"btn btn-primary mb-2\" > Department </Link>\r\n\r\n//             <table className=\"table table-bordered table-striped\">\r\n//                 <thead>\r\n                    \r\n//                     <th> Name </th>\r\n//                     <th> Age </th>\r\n//                     <th> Email </th>\r\n//                     <th> Joining date </th>\r\n//                     <th> Salary </th>\r\n                   \r\n//                     <th> Department Name </th>\r\n                    \r\n//                     <th> Actions </th>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {\r\n//                         employees.map (\r\n//                             employee =>\r\n                            \r\n//                             <tr key={employee.id}> \r\n                                \r\n//                                 <td> {employee.name} </td>\r\n//                                 <td>{employee.age}</td>\r\n//                                 <td>{employee.email}</td>\r\n//                                 <td>{employee.JoiningDate}</td>\r\n//                                 <td>{employee.salary}</td>\r\n                                \r\n//                                 <td>{employee.department.deptName}</td>\r\n\r\n                                \r\n//                                 <td>\r\n//                                     <Link className=\"btn btn-info\" to={`/edit-employee/${employee.id}`} >Update</Link>\r\n//                                     <button className = \"btn btn-danger\" onClick = {() => deleteEmployee(employee.id)}\r\n//                                     style = {{marginLeft:\"10px\"}}> Delete</button>\r\n//                                 </td>\r\n//                             </tr>\r\n//                         )\r\n//                     }\r\n//                 </tbody>\r\n//             </table>\r\n//             <div className=\"mt-3\">\r\n//           {\"Items per Page: \"}\r\n//           <select onChange={handlePageSizeChange} value={size}>\r\n//             {pageSizes.map((size) => (\r\n//               <option key={size} value={size}>\r\n//                 {size}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//           <Pagination\r\n//             className=\"my-3\"\r\n//             count={count}\r\n//             page={page}\r\n//             siblingCount={1}\r\n//             boundaryCount={1}\r\n//             variant=\"outlined\"\r\n//             shape=\"rounded\"\r\n//             onChange={handlePageChange}\r\n//           />\r\n//         </div>\r\n      \r\n//         </div>\r\n        \r\n//     )\r\n// }\r\n// export default EmployeeList"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}